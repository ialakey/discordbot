package com.alakey.discordbot.service;

import net.dv8tion.jda.api.JDA;
import net.dv8tion.jda.api.entities.Guild;

public class VoiceChannelInfoService {

    private final JDA jda;

    public VoiceChannelInfoService(JDA jda) {
        this.jda = jda;
    }

    public String getDetailedVoiceChannelInfo() {
        StringBuilder result = new StringBuilder("üéß *–ê–∫—Ç–∏–≤–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã:*\n\n");

        for (Guild guild : jda.getGuilds()) {
            result.append("üìå *").append(guild.getName()).append("*\n");

            var voiceChannels = guild.getVoiceChannels();
            if (voiceChannels.isEmpty()) {
                result.append("  ‚Äî –ù–µ—Ç –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤\n\n");
                continue;
            }

            for (var vc : voiceChannels) {
                var members = vc.getMembers();
                if (members.isEmpty()) continue;

                result.append("\uD83E\uDD8D ").append(vc.getName()).append(" ‚Äî ")
                        .append(members.size()).append(" —É—á–∞—Å—Ç–Ω–∏–∫(–æ–≤):\n");

                for (var member : members) {
                    var voiceState = member.getVoiceState();
                    boolean muted = voiceState.isSelfMuted() || voiceState.isMuted();

                    String micIcon = muted ? "üîá" : "üé§";
                    result.append("   ")
                            .append(member.getEffectiveName())
                            .append(" ")
                            .append(micIcon)
                            .append("\n");
                }
                result.append("\n");
            }
        }

        return result.toString();
    }
}
